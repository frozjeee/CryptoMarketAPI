"""init

Revision ID: 2ae68dfd2304
Revises: 
Create Date: 2023-03-18 15:03:02.688663

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2ae68dfd2304'
down_revision = None
branch_labels = None
depends_on = None


order_type_enum = postgresql.ENUM(
    "buy",
    "sell",
    name='order_type_enum',
    create_type=False,
)

order_status_enum = postgresql.ENUM(
    "pending",
    "done",
    "cancelled",
    name='order_status_enum',
    create_type=False,
)



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    order_status_enum.create(op.get_bind())
    order_type_enum.create(op.get_bind())

    op.create_table('country',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.execute("INSERT INTO country (name, code) VALUES \
    ('Afghanistan', 'AFG'),\
    ('Albania', 'ALB'),\
    ('Algeria', 'DZA'),\
    ('American Samoa', 'ASM'),\
    ('Andorra', 'AND'),\
    ('Angola', 'AGO'),\
    ('Anguilla', 'AIA'),\
    ('Antigua and Barbuda', 'ATG'),\
    ('Argentina', 'ARG'),\
    ('Armenia', 'ARM'),\
    ('Aruba', 'ABW'),\
    ('Australia', 'AUS'),\
    ('Austria', 'AUT'),\
    ('Azerbaijan', 'AZE'),\
    ('Bahamas', 'BHS'),\
    ('Bahrain', 'BHR'),\
    ('Bangladesh', 'BGD'),\
    ('Barbados', 'BRB'),\
    ('Belarus', 'BLR'),\
    ('Belgium', 'BEL'),\
    ('Belize', 'BLZ'),\
    ('Benin', 'BEN'),\
    ('Bermuda', 'BMU'),\
    ('Bhutan', 'BTN'),\
    ('Bolivia', 'BOL'),\
    ('Bosnia and Herzegovina', 'BIH'),\
    ('Botswana', 'BWA'),\
    ('Brazil', 'BRA'),\
    ('Brunei Darussalam', 'BRN'),\
    ('Bulgaria', 'BGR'),\
    ('Burkina Faso', 'BFA'),\
    ('Burundi', 'BDI'),\
    ('Cambodia', 'KHM'),\
    ('Cameroon', 'CMR'),\
    ('Canada', 'CAN'),\
    ('Cape Verde', 'CPV'),\
    ('Cayman Islands', 'CYM'),\
    ('Central African Republic', 'CAF'),\
    ('Chad', 'TCD'),\
    ('Chile', 'CHL'),\
    ('China', 'CHN'),\
    ('Colombia', 'COL'),\
    ('Comoros', 'COM'),\
    ('Congo', 'COG'),\
    ('Cook Islands', 'COK'),\
    ('Costa Rica', 'CRI'),\
    ('Cote D''Ivoire', 'CIV'),\
    ('Croatia', 'HRV'),\
    ('Cuba', 'CUB'),\
    ('Cyprus', 'CYP'),\
    ('Czech Republic', 'CZE'),\
    ('Denmark', 'DNK'),\
    ('Djibouti', 'DJI'),\
    ('Dominica', 'DMA'),\
    ('Dominican Republic', 'DOM'),\
    ('Ecuador', 'ECU'),\
    ('Egypt', 'EGY'),\
    ('El Salvador', 'SLV'),\
    ('Equatorial Guinea', 'GNQ'),\
    ('Eritrea', 'ERI'),\
    ('Estonia', 'EST'),\
    ('Ethiopia', 'ETH'),\
    ('Falkland Islands (Malvinas)', 'FLK'),\
    ('Faroe Islands', 'FRO'),\
    ('Fiji', 'FJI'),\
    ('Finland', 'FIN'),\
    ('France', 'FRA'),\
    ('French Guiana', 'GUF'),\
    ('French Polynesia', 'PYF'),\
    ('Gabon', 'GAB'),\
    ('Gambia', 'GMB'),\
    ('Georgia', 'GEO'),\
    ('Germany', 'DEU'),\
    ('Ghana', 'GHA'),\
    ('Gibraltar', 'GIB'),\
    ('Greece', 'GRC'),\
    ('Greenland', 'GRL'),\
    ('Grenada', 'GRD'),\
    ('Guadeloupe', 'GLP'),\
    ('Guam', 'GUM'),\
    ('Guatemala', 'GTM'),\
    ('Guinea', 'GIN'),\
    ('Guinea-Bissau', 'GNB'),\
    ('Guyana', 'GUY'),\
    ('Haiti', 'HTI'),\
    ('Honduras', 'HND'),\
    ('Hong Kong', 'HKG'),\
    ('Hungary', 'HUN'),\
    ('Iceland', 'ISL'),\
    ('India', 'IND'),\
    ('Indonesia', 'IDN'),\
    ('Iran', 'IRN'),\
    ('Iraq', 'IRQ'),\
    ('Ireland', 'IRL'),\
    ('Israel', 'ISR'),\
    ('Italy', 'ITA'),\
    ('Jamaica', 'JAM'),\
    ('Japan', 'JPN'),\
    ('Jordan', 'JOR'),\
    ('Kazakhstan', 'KAZ'),\
    ('Kenya', 'KEN'),\
    ('Kiribati', 'KIR'),\
    ('Korea', 'KOR'),\
    ('Kuwait', 'KWT'),\
    ('Kyrgyzstan', 'KGZ'),\
    ('Lao People''s Democratic Republic', 'LAO'),\
    ('Latvia', 'LVA'),\
    ('Lebanon', 'LBN'),\
    ('Lesotho', 'LSO'),\
    ('Liberia', 'LBR'),\
    ('Libyan Arab Jamahiriya', 'LBY'),\
    ('Liechtenstein', 'LIE'),\
    ('Lithuania', 'LTU'),\
    ('Luxembourg', 'LUX'),\
    ('Macao', 'MAC'),\
    ('Macedonia', 'MKD'),\
    ('Madagascar', 'MDG'),\
    ('Malawi', 'MWI'),\
    ('Malaysia', 'MYS'),\
    ('Maldives', 'MDV'),\
    ('Mali', 'MLI'),\
    ('Malta', 'MLT'),\
    ('Marshall Islands', 'MHL'),\
    ('Martinique', 'MTQ'),\
    ('Mauritania', 'MRT'),\
    ('Mauritius', 'MUS'),\
    ('Mexico', 'MEX'),\
    ('Micronesia', 'FSM'),\
    ('Moldova', 'MDA'),\
    ('Monaco', 'MCO'),\
    ('Mongolia', 'MNG'),\
    ('Montserrat', 'MSR'),\
    ('Morocco', 'MAR'),\
    ('Mozambique', 'MOZ'),\
    ('Myanmar', 'MMR'),\
    ('Namibia', 'NAM'),\
    ('Nauru', 'NRU'),\
    ('Nepal', 'NPL'),\
    ('Netherlands', 'NLD'),\
    ('Netherlands Antilles', 'ANT'),\
    ('New Caledonia', 'NCL'),\
    ('New Zealand', 'NZL'),\
    ('Nicaragua', 'NIC'),\
    ('Niger', 'NER'),\
    ('Nigeria', 'NGA'),\
    ('Niue', 'NIU'),\
    ('Norfolk Island', 'NFK'),\
    ('Northern Mariana Islands', 'MNP'),\
    ('Norway', 'NOR'),\
    ('Oman', 'OMN'),\
    ('Pakistan', 'PAK'),\
    ('Palau', 'PLW'),\
    ('Panama', 'PAN'),\
    ('Papua New Guinea', 'PNG'),\
    ('Paraguay', 'PRY'),\
    ('Peru', 'PER'),\
    ('Philippines', 'PHL'),\
    ('Pitcairn', 'PCN'),\
    ('Poland', 'POL'),\
    ('Portugal', 'PRT'),\
    ('Puerto Rico', 'PRI'),\
    ('Qatar', 'QAT'),\
    ('Reunion', 'REU'),\
    ('Romania', 'ROM'),\
    ('Russian Federation', 'RUS'),\
    ('Rwanda', 'RWA'),\
    ('Saint Helena', 'SHN'),\
    ('Saint Kitts and Nevis', 'KNA'),\
    ('Saint Lucia', 'LCA'),\
    ('Saint Pierre and Miquelon', 'SPM'),\
    ('Saint Vincent and the Grenadines', 'VCT'),\
    ('Samoa', 'WSM'),\
    ('San Marino', 'SMR'),\
    ('Sao Tome and Principe', 'STP'),\
    ('Saudi Arabia', 'SAU'),\
    ('Senegal', 'SEN'),\
    ('Seychelles', 'SYC'),\
    ('Sierra Leone', 'SLE'),\
    ('Singapore', 'SGP'),\
    ('Slovakia', 'SVK'),\
    ('Slovenia', 'SVN'),\
    ('Solomon Islands', 'SLB'),\
    ('Somalia', 'SOM'),\
    ('South Africa', 'ZAF'),\
    ('Spain', 'ESP'),\
    ('Sri Lanka', 'LKA'),\
    ('Sudan', 'SDN'),\
    ('Suriname', 'SUR'),\
    ('Svalbard and Jan Mayen', 'SJM'),\
    ('Swaziland', 'SWZ'),\
    ('Sweden', 'SWE'),\
    ('Switzerland', 'CHE'),\
    ('Syrian Arab Republic', 'SYR'),\
    ('Taiwan, Province of China', 'TWN'),\
    ('Tajikistan', 'TJK'),\
    ('Tanzania', 'TZA'),\
    ('Thailand', 'THA'),\
    ('Togo', 'TGO'),\
    ('Tokelau', 'TKL'),\
    ('Tonga', 'TON'),\
    ('Trinidad and Tobago', 'TTO'),\
    ('Tunisia', 'TUN'),\
    ('Turkey', 'TUR'),\
    ('Turkmenistan', 'TKM'),\
    ('Turks and Caicos Islands', 'TCA'),\
    ('Tuvalu', 'TUV'),\
    ('Uganda', 'UGA'),\
    ('Ukraine', 'UKR'),\
    ('United Arab Emirates', 'ARE'),\
    ('United Kingdom', 'GBR'),\
    ('United States', 'USA'),\
    ('Uruguay', 'URY'),\
    ('Uzbekistan', 'UZB'),\
    ('Vanuatu', 'VUT'),\
    ('Venezuela', 'VEN'),\
    ('Viet Nam', 'VNM'),\
    ('Virgin Islands, British', 'VGB'),\
    ('Virgin Islands, U.s.', 'VIR'),\
    ('Wallis and Futuna', 'WLF'),\
    ('Western Sahara', 'ESH'),\
    ('Yemen', 'YEM'),\
    ('Zambia', 'ZMB'),\
    ('Zimbabwe', 'ZWE')")

    op.create_table('currency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.Column('quantity', sa.DECIMAL(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('money',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.DECIMAL(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('wallet',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.DECIMAL(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'currency_id'),
    sa.UniqueConstraint('user_id', 'currency_id', name='uix_wallet_user_id_currency_id')
    )
    op.create_table('currency_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('email', sa.String(length=250), nullable=True),
    sa.Column('password', sa.String(length=250), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('money_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['money_id'], ['money.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('type', order_type_enum, nullable=True),
    sa.Column('price', sa.DECIMAL(), nullable=True),
    sa.Column('quantity', sa.DECIMAL(), nullable=True),
    sa.Column('status', order_status_enum, nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order')
    op.drop_table('user')
    op.drop_table('currency_history')
    op.drop_table('wallet')
    op.drop_table('money')
    op.drop_table('currency')
    op.drop_table('country')

    order_status_enum.drop(op.get_bind())
    order_type_enum.drop(op.get_bind())
    # ### end Alembic commands ###
